[{"C:\\Users\\hp\\Desktop\\Web Development\\Form-Formik\\formikform\\src\\reportWebVitals.js":"1","C:\\Users\\hp\\Desktop\\Web Development\\Form-Formik\\formikform\\src\\components\\FormikControl.js":"2","C:\\Users\\hp\\Desktop\\Web Development\\Form-Formik\\formikform\\src\\components\\CheckboxGroup.js":"3","C:\\Users\\hp\\Desktop\\Web Development\\Form-Formik\\formikform\\src\\components\\Select.js":"4","C:\\Users\\hp\\Desktop\\Web Development\\Form-Formik\\formikform\\src\\components\\DatePicker.js":"5","C:\\Users\\hp\\Desktop\\Web Development\\Form-Formik\\formikform\\src\\App.js":"6","C:\\Users\\hp\\Desktop\\Web Development\\Form-Formik\\formikform\\src\\components\\FormikForm.js":"7","C:\\Users\\hp\\Desktop\\Web Development\\Form-Formik\\formikform\\src\\components\\Input.js":"8","C:\\Users\\hp\\Desktop\\Web Development\\Form-Formik\\formikform\\src\\components\\TextError.js":"9","C:\\Users\\hp\\Desktop\\Web Development\\Form-Formik\\formikform\\src\\components\\Textarea.js":"10","C:\\Users\\hp\\Desktop\\Web Development\\Form-Formik\\formikform\\src\\index.js":"11","C:\\Users\\hp\\Desktop\\Web Development\\Form-Formik\\formikform\\src\\components\\RadioButtons.js":"12"},{"size":362,"mtime":1606971920958,"results":"13","hashOfConfig":"14"},{"size":840,"mtime":1610126156901,"results":"15","hashOfConfig":"14"},{"size":1286,"mtime":1609861252578,"results":"16","hashOfConfig":"14"},{"size":725,"mtime":1609853225351,"results":"17","hashOfConfig":"14"},{"size":966,"mtime":1609928351655,"results":"18","hashOfConfig":"14"},{"size":183,"mtime":1610125825008,"results":"19","hashOfConfig":"14"},{"size":15408,"mtime":1610295874034,"results":"20","hashOfConfig":"14"},{"size":473,"mtime":1609843052880,"results":"21","hashOfConfig":"14"},{"size":205,"mtime":1609842991405,"results":"22","hashOfConfig":"14"},{"size":493,"mtime":1609844542879,"results":"23","hashOfConfig":"14"},{"size":500,"mtime":1606971920958,"results":"24","hashOfConfig":"14"},{"size":1275,"mtime":1609861447053,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1bropyc",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\hp\\Desktop\\Web Development\\Form-Formik\\formikform\\src\\reportWebVitals.js",[],["56","57"],"C:\\Users\\hp\\Desktop\\Web Development\\Form-Formik\\formikform\\src\\components\\FormikControl.js",[],"C:\\Users\\hp\\Desktop\\Web Development\\Form-Formik\\formikform\\src\\components\\CheckboxGroup.js",[],"C:\\Users\\hp\\Desktop\\Web Development\\Form-Formik\\formikform\\src\\components\\Select.js",[],"C:\\Users\\hp\\Desktop\\Web Development\\Form-Formik\\formikform\\src\\components\\DatePicker.js",["58","59"],"import React from 'react'\r\nimport DateView from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport {Field, ErrorMessage} from 'formik'\r\nimport TextError from './TextError'\r\n\r\nfunction DatePicker(props) {\r\n    const {label, name, ...rest} = props\r\n    return (\r\n        <div className ='form-control'>\r\n            <label htmlFor = {name}>{label}</label>\r\n            <Field name={name}>\r\n                {\r\n                    ({form, field})=>{\r\n                        const {setFieldValue} = form\r\n                        const {value} = field\r\n                        return(\r\n                            <DateView id = {name}  {...field} {...rest}\r\n                            selected = {value}\r\n                            onChange={(val)=> setFieldValue(name, val)}/>\r\n                        )\r\n                    }\r\n                }\r\n            </Field>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DatePicker\r\n",["60","61"],"C:\\Users\\hp\\Desktop\\Web Development\\Form-Formik\\formikform\\src\\App.js",[],["62","63"],"C:\\Users\\hp\\Desktop\\Web Development\\Form-Formik\\formikform\\src\\components\\FormikForm.js",["64","65"],"import React, {useState} from 'react'\r\nimport {Formik, Form, FieldArray} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport FormikControl from './FormikControl'\r\nimport axios from 'axios'\r\n\r\nfunction FormikForm() {\r\n\r\n    const [Personal, setPersonal] = useState(true)\r\n    const [Orders, setOrders] = useState(false)\r\n    const [Bank, setBank] = useState(false)\r\n\r\n    const AcOptions = [\r\n        {key : 'SBI', value : 'SBI'},\r\n        {key : 'HDFC', value : 'HDFC'}\r\n    ]    \r\n\r\n    const initialValues = {\r\n        OrderNo:'',\r\n        Date:'',\r\n        Name:'',\r\n        AadharNo:'',\r\n        Address:'',\r\n        Tehsil:'',\r\n        District:'',\r\n        PinCode:'',\r\n        State:'',\r\n        Whatsapp:'',\r\n        Contact:'',\r\n        CompanyName:'',\r\n\r\n        OrderTable: [{\r\n            Order_Details:'',\r\n            Order_Quantity:'',\r\n            Order_Rate:'',\r\n            Order_Amount:'',\r\n        }],  \r\n        TotalAmt:0,\r\n        Advance:0, \r\n        BillAmt:0,\r\n        TransportChrg:0,\r\n        DueAmt:0,\r\n        DeliveryDate:'',\r\n        DeliveryPlace:'',\r\n        DepositTable:[{\r\n            Deposit_Date:'',\r\n            Deposit_Amount:'',\r\n            Deposit_UTRNo:'',\r\n            Deposit_Bank:''\r\n        }],        \r\n\r\n        Ac:'',\r\n        AcHolder:'',\r\n        AcNo:'',\r\n        IFSC:'',\r\n        DealerName:'',\r\n        DealerContact:'',            \r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        OrderNo : Yup.string().nullable(),\r\n        Date : Yup.date().required('Required'),\r\n        Name : Yup.string().required('Required'),\r\n        AadharNo : Yup.string().matches(/^\\d{4}\\s\\d{4}\\s\\d{4}$/, 'Invalid Aadhar No').required('Required'),\r\n        Address : Yup.string().required('Required'),\r\n        Tehsil : Yup.string().required('Required'),\r\n        District : Yup.string().required('Required'),\r\n        PinCode : Yup.string().matches(/^\\d{3}\\s\\d{3}$/, 'Invalid PinCode').required('Required'),\r\n        State : Yup.string().required('Required'),\r\n        Whatsapp : Yup.string().matches(/^\\d{10}$/, 'Invalid WhatsApp No').nullable(),\r\n        Contact : Yup.string().matches(/^\\d{10}$/, 'Invalid Contact No').required('Required'),\r\n        CompanyName : Yup.string().required('Required'),\r\n\r\n        OrderTable : Yup.array().of(\r\n            Yup.object({\r\n                Order_Details : Yup.string().required('Required'),\r\n                Order_Quantity : Yup.number().positive().typeError('Must be a number').required('Required'),\r\n                Order_Rate : Yup.number().positive().typeError('Must be a number').required('Required'),\r\n            })\r\n        ).required('Must have orders').min(1, 'Minimum 1 order'),        \r\n        TransportChrg : Yup.number().positive().nullable(),\r\n        Advance : Yup.number().positive().required('Required'),\r\n        BillAmt : Yup.number().positive().required('Required'),\r\n        TotalAmt : Yup.number().required('Required'),\r\n        DueAmt : Yup.number().required('Required'),\r\n        DeliveryDate : Yup.date().required('Required'),\r\n        DeliveryPlace : Yup.string().required('Required'),\r\n        DepositTable : Yup.array().of(\r\n            Yup.object({\r\n                Deposit_Date : Yup.date().required('Required'),\r\n                Deposit_Amount : Yup.number().positive().required('Required'),\r\n                Deposit_UTRNo: Yup.string().required('Required'),\r\n                Deposit_Bank : Yup.string().required('Required')\r\n            })\r\n        ).min(1, 'Minimum one required').required('Required'),\r\n\r\n        Ac : Yup.string().required('Required'),\r\n        AcHolder : Yup.string().required('Required'),\r\n        AcNo : Yup.number().positive().required('Required'),\r\n        IFSC: Yup.string().matches(/^\\w{4}0\\d{6}$/, 'Invalid IFSC code').required('Required'),\r\n        DealerName : Yup.string().required('Required'),\r\n        DealerContact : Yup.string().matches(/^\\d{10}$/, 'Invalid Mobile No').required('Required')\r\n    })\r\n\r\n    const onSubmit = (values, onSubmitProps) =>{\r\n        console.log('Form values', values)        \r\n        // const payload = values        \r\n        // axios.post('http://localhost:4000/order/add' ,payload)\r\n        // .then((data)=>{\r\n        //     console.log(data)\r\n        //     alert(\"Successfully submitted form.\")\r\n        // })\r\n        // .catch((err)=>{console.log(err)})\r\n        onSubmitProps.resetForm()\r\n    }\r\n\r\n    const personal_next = () =>{      \r\n            setPersonal(prevPersonal => !prevPersonal)\r\n            setOrders(prevOrders => !prevOrders)\r\n    }\r\n\r\n    const order_next = () =>{   \r\n            setOrders(prevOrders => !prevOrders)\r\n            setBank(prevBank => !prevBank)\r\n    }\r\n\r\n    const order_prev =()=>{\r\n        setPersonal(prevPersonal => !prevPersonal)\r\n        setOrders(prevOrders => !prevOrders)        \r\n    }\r\n\r\n    const bank_prev = () =>{   \r\n        setOrders(prevOrders => !prevOrders)\r\n        setBank(prevBank => !prevBank)\r\n    }\r\n\r\n    function add_row (arrayHelpers, setFieldValue, bill, amt){        \r\n        arrayHelpers.push({Order_Details: '', Order_Quantity: '', Order_Rate: '', Order_Amount: ''})\r\n        set_bill_add(setFieldValue,bill,amt)\r\n    } \r\n\r\n    function set_bill_add (setFieldValue,bill,amt){\r\n        setFieldValue('BillAmt', bill+=amt)        \r\n    }\r\n\r\n    function del_row (arrayHelpers,index, setFieldValue, bill, amt){   \r\n        set_bill_del(setFieldValue,bill,amt)     \r\n        arrayHelpers.remove(index)\r\n        \r\n    } \r\n\r\n    function set_bill_del (setFieldValue,bill,amt){        \r\n        setFieldValue('BillAmt', bill-=amt)\r\n        // console.log(bill, amt)\r\n    }\r\n\r\n    return (\r\n       <Formik\r\n        initialValues = {initialValues}\r\n        validationSchema = {validationSchema}\r\n        onSubmit = {onSubmit}  \r\n        validateOnBlur={false}\r\n        // validateOnChange={false}             \r\n        >\r\n            {\r\n                formik =>{                    \r\n                    return <Form>\r\n                        {Personal && <div className = 'form-control'>\r\n                            <FormikControl control = 'input' type = 'text' name = 'OrderNo' placeholder = 'Order No' /> \r\n                            <FormikControl control = 'date' name = 'Date' placeholderText = 'Enter date' />   \r\n                            <FormikControl control = 'input' type = 'text' name = 'Name' placeholder = 'Name' />  \r\n                            <FormikControl control = 'input' type = 'text' name = 'AadharNo' placeholder = 'Aadhar No eg: 1234 5678 1234' />  \r\n                            <FormikControl control = 'textarea' name = 'Address' placeholder = 'Address' />   \r\n                            <FormikControl control = 'input' type = 'text' name = 'Tehsil' placeholder = 'Tehsil' />\r\n                            <FormikControl control = 'input' type = 'text' name = 'District' placeholder = 'District' />\r\n                            <FormikControl control = 'input' type = 'text' name = 'PinCode' placeholder = 'Enter PinCode eg: 123 456' />\r\n                            <FormikControl control = 'input' type = 'text' name = 'State' placeholder = 'State'/>\r\n                            <FormikControl control = 'input' type = 'text' name = 'Whatsapp' placeholder = 'Whatsapp Number' />\r\n                            <FormikControl control = 'input' type = 'text' name = 'Contact' placeholder = 'Contact Number' />\r\n                            <FormikControl control = 'input' type = 'text' name = 'CompanyName' placeholder = 'Enter Company Name' />\r\n                            <button type = 'button' onClick={personal_next}>Next</button>                          \r\n                        </div> } \r\n\r\n                        {Orders && <div className = 'form-control'>\r\n                            <table>\r\n                                <thead>\r\n                                    Orders\r\n                                    {/* <tr>\r\n                                        <th scope=\"col\" colspan=\"2\">Srl No</th>\r\n                                        <th scope=\"col \">Details</th>\r\n                                        <th scope=\"col\">Quantity</th>\r\n                                        <th scope=\"col\">Rate</th>\r\n                                        <th scope=\"col\">Amount</th>\r\n                                    </tr> */}\r\n                                </thead>\r\n                                <tbody>                                    \r\n                                    <FieldArray name = 'OrderTable'  render ={arrayHelpers => (<div> {formik.values.OrderTable.map((Order, index) => (<div key={index}>                                                \r\n                                            <th scope=\"col\"><button type = 'button' onClick = {() => {add_row(arrayHelpers,formik.setFieldValue, formik.values.BillAmt, formik.values.OrderTable[index].Order_Quantity * formik.values.OrderTable[index].Order_Rate)}}>+ New</button></th>\r\n                                            <th scope=\"col\"><button type = 'button' onClick = {() => {del_row(arrayHelpers,index,formik.setFieldValue, formik.values.BillAmt,formik.values.OrderTable[index].Order_Quantity * formik.values.OrderTable[index].Order_Rate)}}>Delete</button></th>\r\n                                            <th scope=\"col\"><FormikControl control = 'input' type = 'text' name = {`OrderTable[${index}].Order_Details`} placeholder = {`Detail ${index+1}`} /></th>\r\n                                            <th scope=\"col\"><FormikControl control = 'input' type = 'text' name = {`OrderTable[${index}].Order_Quantity`} placeholder = {`Quantity ${index+1}`}/></th>\r\n                                            <th scope=\"col\"><FormikControl control = 'input' type = 'text' name = {`OrderTable[${index}].Order_Rate`} placeholder = {`Rate ${index+1}`}/></th>\r\n                                            <th scope=\"col\"><FormikControl control = 'input' type = 'text' name = {`OrderTable[${index}].Order_Amount`} placeholder = {`Amount ${index+1}`} value = {formik.values.OrderTable[index].Order_Quantity * formik.values.OrderTable[index].Order_Rate}/></th>\r\n                                            \r\n                                        </div>))}                                            \r\n                                        </div>)}/>\r\n                                </tbody>\r\n                            </table>\r\n\r\n                            <FormikControl control = 'input' name = 'BillAmt' type = 'text' label = 'Bill Amount' placeholder = 'Bill Amount'/>                            \r\n                            <FormikControl control = 'input' name = 'TransportChrg' type = 'text' label = 'Transport Charge' placeholder = 'Transport Charge'/>\r\n                            <FormikControl control = 'input' name = 'Advance' type = 'text' label = 'Advance ' placeholder = 'Advance Amount' />\r\n                            <FormikControl control = 'input' name = 'TotalAmt' type = 'number' label = 'Total Amount' placeholder = 'Total Amount' value={Number(formik.values.BillAmt)+Number(formik.values.TransportChrg)} />\r\n                            <FormikControl control = 'input' name = 'DueAmt' type = 'text' label = 'Due Amount' placeholder = 'Due Amount' value={(Number(formik.values.BillAmt)+Number(formik.values.TransportChrg))-Number(formik.values.Advance)}/>\r\n                            <FormikControl control = 'date' name = 'DeliveryDate' label = 'Delivery Date' placeholderText = 'Delivery Date'/>\r\n                            <FormikControl control = 'textarea' name = 'DeliveryPlace' type = 'text'  placeholder = 'Delivery Address '/>\r\n                            \r\n                            <table>\r\n                                <thead>\r\n                                    Deposit Details\r\n                                    {/* <tr>\r\n                                        <th scope=\"col\" colspan=\"2\">Srl No</th>\r\n                                        <th scope=\"col \">Deposit Date</th>\r\n                                        <th scope=\"col\">Amount</th>\r\n                                        <th scope=\"col\">UTR, IMPS, Ref No.</th>\r\n                                        <th scope=\"col\">Bank Name</th>\r\n                                    </tr> */}\r\n                                </thead>\r\n                                <tbody>                                    \r\n                                    <FieldArray name = 'DepositTable'  render ={arrayHelpers => (<div> {formik.values.DepositTable.map((Deposit, index) => (<div key={index}>                                                \r\n                                            <th scope=\"col\">{index==0 && <button type = 'button' onClick = {() => arrayHelpers.push({Deposit_Date: '', Deposit_Amount: '', Deposit_UTRNo: '', Deposit_Bank:''}) }>+ New</button>}</th>\r\n                                            <th scope=\"col\">{index>0 && <button type = 'button' onClick = {() => arrayHelpers.remove(index)}>Delete</button>}</th>\r\n                                            <th scope=\"col\"><FormikControl control = 'date' type = 'text' name = {`DepositTable[${index}].Deposit_Date`} placeholderText = {`dd/mm/yyyy`}/></th>\r\n                                            <th scope=\"col\"><FormikControl control = 'input' type = 'text' name = {`DepositTable[${index}].Deposit_Amount`} placeholder = {`Amount ${index+1}`}  /></th>\r\n                                            <th scope=\"col\"><FormikControl control = 'input' type = 'text' name = {`DepositTable[${index}].Deposit_UTRNo`} placeholder = {`IMPS, UTR, Ref No ${index+1}`} /></th>\r\n                                            <th scope=\"col\"><FormikControl control = 'input' type = 'text' name = {`DepositTable[${index}].Deposit_Bank`} placeholder = {`Bank ${index+1}`} /></th>\r\n                                        </div>))}                                            \r\n                                        </div>)}/>\r\n                                </tbody>\r\n                            </table>\r\n\r\n                            <button type='button' onClick = {order_prev}>Previous</button>\r\n                            <button type = 'button' onClick = {order_next}>Next</button>    \r\n                            </div>}             \r\n\r\n                        {Bank && <div  className = 'form-control'>\r\n                            <FormikControl control = 'radio' name = 'Ac' options={AcOptions}/>\r\n                            <FormikControl control = 'input' type = 'text' name = 'AcHolder' placeholder = 'A/c Holder Name'/>\r\n                            <FormikControl control = 'input' type = 'text' name = 'AcNo' placeholder = 'A/c No'/>\r\n                            <FormikControl control = 'input' type = 'text' name = 'IFSC' placeholder = 'IFSC'/>\r\n                            <FormikControl control = 'input' type = 'text' name = 'DealerName' placeholder = 'Dealer Name'/>\r\n                            <FormikControl control = 'input' type = 'text' name = 'DealerContact' placeholder = 'Mobile Number'/>\r\n                            <button type='button' onClick = {bank_prev}>Previous</button>\r\n                            <button type = 'submit' disabled = {!formik.isValid}>Submit</button>\r\n                            </div>}\r\n                    </Form>\r\n                }\r\n            }\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default FormikForm\r\n","C:\\Users\\hp\\Desktop\\Web Development\\Form-Formik\\formikform\\src\\components\\Input.js",[],["66","67"],"C:\\Users\\hp\\Desktop\\Web Development\\Form-Formik\\formikform\\src\\components\\TextError.js",[],"C:\\Users\\hp\\Desktop\\Web Development\\Form-Formik\\formikform\\src\\components\\Textarea.js",[],"C:\\Users\\hp\\Desktop\\Web Development\\Form-Formik\\formikform\\src\\index.js",[],"C:\\Users\\hp\\Desktop\\Web Development\\Form-Formik\\formikform\\src\\components\\RadioButtons.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":4,"column":16,"nodeType":"74","messageId":"75","endLine":4,"endColumn":28},{"ruleId":"72","severity":1,"message":"76","line":5,"column":8,"nodeType":"74","messageId":"75","endLine":5,"endColumn":17},{"ruleId":"68","replacedBy":"77"},{"ruleId":"70","replacedBy":"78"},{"ruleId":"68","replacedBy":"79"},{"ruleId":"70","replacedBy":"80"},{"ruleId":"72","severity":1,"message":"81","line":5,"column":8,"nodeType":"74","messageId":"75","endLine":5,"endColumn":13},{"ruleId":"82","severity":1,"message":"83","line":231,"column":67,"nodeType":"84","messageId":"85","endLine":231,"endColumn":69},{"ruleId":"68","replacedBy":"86"},{"ruleId":"70","replacedBy":"87"},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'ErrorMessage' is defined but never used.","Identifier","unusedVar","'TextError' is defined but never used.",["88"],["89"],["88"],["89"],"'axios' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["88"],["89"],"no-global-assign","no-unsafe-negation"]